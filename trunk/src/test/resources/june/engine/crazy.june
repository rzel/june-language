def blah {
	var a = 5;
	go
}

def something(a: String) {
	out.println("there");
}

# TODO Allow parameter (co and contra) variance if only one (semi-matching) super-class method and use of override.

override equals(other: Lizard): Boolean = false

var 
: String\\\%^$%^$%; var a: String = c;;; var c

var b = ''

try {
	something.more(4, dude).there
	writeLine('Hello, world!')
	writeLine('Just a #bit# more here.', static Logger(getClass))
	repeat {
		that
	} until(done) # 'blah {} something' is equivalent to 'blah(do(){}).something();'.
	writeLine('Too cool!'); writeLine('And another statement for kicks.')
	a; b; c
} catch {
} finally {
	whatever
}

def whatever(... last) {
}

def html(block: do(with Html)) {
	var a = 2;
}

switch(a) {
	case(`hello) {
	}
	case(3) {
	}
}

def {
